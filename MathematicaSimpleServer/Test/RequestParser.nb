(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     14127,        374]
NotebookOptionsPosition[     13355,        343]
NotebookOutlinePosition[     13701,        358]
CellTagsIndexPosition[     13658,        355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"::", "Package", "::"}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Title", ":", " ", "RequestParser"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   ":", "Contetx", ":", " ", "MathematicaSimpleServer`RequestParser`"}], " ", 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Keywords", ":", " ", 
    RowBox[{"request", " ", "parser"}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Author", ":", " ", 
    RowBox[{"Kirill", " ", "Belov"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{":", "Email", ":", " ", 
    RowBox[{
     RowBox[{"KirillBelovTest", "@", "gmail"}], ".", "com"}]}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
    "BeginPackage", "[", "\"\<MathematicaSimpleServer`RequestParser`\>\"", 
     "]"}], ";"}], " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"publick", " ", "funcs", " ", "and", " ", "names"}], " ", "*)"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RequestParser", "::", "usag"}], " ", "=", " ", 
     "\"\<RequestParser[]\>\""}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], " ", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"private", " ", "definitions"}], " ", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"internal", " ", "name"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Checker", "::", "usage"}], " ", "=", " ", "\"\<Checker[]\>\""}],
     ";"}], " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"internal", " ", "name"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Component", "::", "usage"}], " ", "=", " ", 
     "\"\<Component[]\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{
     RowBox[{
     "override", " ", "Keys", " ", "on", " ", "the", " ", "request", " ", 
      "parser", " ", "type", " ", "\n", "\t", 
      RowBox[{"Keys", "[", 
       RowBox[{"RequestParser", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"key1", " ", "->", " ", 
           RowBox[{"check1", " ", "->", " ", "component1"}]}], ",", " ", 
          RowBox[{"key2", " ", "->", " ", "..."}]}], "}"}], "]"}], "]"}]}], 
     " ", ">>", " ", 
     RowBox[{"{", 
      RowBox[{"key1", ",", " ", "key2", ",", " ", "..."}], "}"}]}], "\n", 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"RequestParser", " ", "/:", " ", "\n", 
     RowBox[{
      RowBox[{"Keys", "[", "requestParser_RequestParser", "]"}], " ", "/;", 
      " ", "\n", 
      RowBox[{"MatchQ", "[", "\n", "\t", 
       RowBox[{"requestParser", ",", " ", "\n", "\t", 
        RowBox[{"RequestParser", "[", "\n", "\t\t", 
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Rule", "[", "\n", "\t\t\t\t", 
            RowBox[{"_String", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"Rule", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"_Symbol", " ", "|", " ", "_Function"}], ")"}], ",", 
               " ", "\n", "\t\t\t\t\t", 
               RowBox[{"(", 
                RowBox[{"_Symbol", " ", "|", " ", "_Function"}], ")"}]}], 
              "\n", "\t\t\t\t", "]"}]}], "\n", "\t\t\t", "]"}], ".."}], "\n", 
          "\t\t", "}"}], "\n", "\t", "]"}]}], "\n", "]"}]}], " ", ":=", " ", 
     RowBox[{"requestParser", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", " ", "All", ",", " ", "1"}], "]"}], "]"}]}], ";"}], 
   " ", "\n", "\n", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{
     RowBox[{
     "override", " ", "Part", " ", "on", " ", "the", " ", "request", " ", 
      "parser", " ", "type", " ", "and", " ", "checker", " ", "of", " ", 
      "the", " ", "parser", " ", "type", "\n", "\t", 
      RowBox[{
       RowBox[{"RequestParser", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"key1", " ", "->", " ", 
           RowBox[{"check1", " ", "->", " ", "component1"}]}], ",", " ", 
          RowBox[{"key2", " ", "->", " ", "..."}]}], "}"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"Component", "[", "key1", "]"}], "]"}], "]"}]}], " ", ">>", 
     " ", "checker1"}], "\n", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Part", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"RequestParser", "[", "\n", "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{"___Rule", ",", " ", "\n", "\t\t\t", 
          RowBox[{"key_String", " ", "->", " ", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"checker", ":", " ", "\n", "\t\t\t\t", 
             RowBox[{"(", "\n", "\t\t\t\t\t", 
              RowBox[{
              "_Symbol", " ", "|", " ", "\n", "\t\t\t\t\t", "_Function"}], 
              "\n", "\t\t\t\t", ")"}]}], " ", "->", " ", "\n", "\t\t\t", 
            RowBox[{"_", ":", " ", "\n", "\t\t\t\t", 
             RowBox[{"(", "\n", "\t\t\t\t\t", 
              RowBox[{
              "_Symbol", " ", "|", " ", "\n", "\t\t\t\t\t", "_Function"}], 
              "\n", "\t\t\t\t", ")"}]}]}]}], ",", " \t", "\n", "\t\t\t", 
          "___Rule"}], "\n", "\t\t", "}"}], "\n", "\t", "]"}], ",", " ", "\n",
        "\t", 
       RowBox[{"Checker", "[", "key_String", "]"}]}], "\n", "]"}], " ", "^:=",
      " ", "checker"}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", " ", "\n", "\t", 
    RowBox[{
     RowBox[{
     "override", " ", "Part", " ", "on", " ", "the", " ", "request", " ", 
      "parser", " ", "type", " ", "and", " ", "component", " ", "of", " ", 
      "the", " ", "parser", " ", "type", "\n", "\t", 
      RowBox[{
       RowBox[{"RequestParser", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"key1", " ", "->", " ", 
           RowBox[{"check1", " ", "->", " ", "component1"}]}], ",", " ", 
          RowBox[{"key2", " ", "->", " ", "..."}]}], "}"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"Component", "[", "key1", "]"}], "]"}], "]"}]}], " ", ">>", 
     " ", "component1"}], "\n", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Part", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"RequestParser", "[", "\n", "\t\t", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{"___Rule", ",", " ", "\n", "\t\t\t", 
          RowBox[{"key_String", " ", "->", " ", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"_", ":", " ", "\n", "\t\t\t\t", 
             RowBox[{"(", "\n", "\t\t\t\t\t", 
              RowBox[{
              "_Symbol", " ", "|", " ", "\n", "\t\t\t\t\t", "_Function"}], 
              "\n", "\t\t\t\t", ")"}]}], " ", "->", " ", "\n", "\t\t\t", 
            RowBox[{"component", ":", " ", "\n", "\t\t\t\t", 
             RowBox[{"(", "\n", "\t\t\t\t\t", 
              RowBox[{
              "_Symbol", " ", "|", " ", "\n", "\t\t\t\t\t", "_Function"}], 
              "\n", "\t\t\t\t", ")"}]}]}]}], ",", " \t", "\n", "\t\t\t", 
          "___Rule"}], "\n", "\t\t", "}"}], "\n", "\t", "]"}], ",", " ", "\n",
        "\t", 
       RowBox[{"Component", "[", "key_String", "]"}]}], "\n", "]"}], " ", "^:=",
      " ", "component"}], ";"}], " ", "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"main", " ", "definition"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"requestParser_RequestParser", "[", "request_String", "]"}], " ",
      ":=", " ", "\n", 
     RowBox[{"Check", "[", "\n", "\n", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"key", " ", "->", " ", "result"}], "]"}], " ", "*)"}], "\n", 
      "\t", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"First", "[", 
         RowBox[{"Last", "[", 
          RowBox[{"Reap", "[", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Do", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"If", "[", "\n", "\t\t\t\t", 
               RowBox[{"(*", " ", 
                RowBox[{"check", " ", "condition"}], " ", "*)"}], "\n", 
               "\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"requestParser", "[", 
                  RowBox[{"[", 
                   RowBox[{"Checker", "[", "key", "]"}], "]"}], "]"}], "[", 
                 "request", "]"}], ",", " ", "\n", "\t\t", "\n", "\t\t\t\t", 
                RowBox[{"(*", " ", "action", " ", "*)"}], "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{"key", " ", "->", " ", 
                   RowBox[{
                    RowBox[{"requestParser", "[", 
                    RowBox[{"[", 
                    RowBox[{"Component", "[", "key", "]"}], "]"}], "]"}], "[",
                     "request", "]"}]}], "]"}], ";", " ", 
                 RowBox[{"Break", "[", "]"}]}]}], "\n", "\t\t\t", "]"}], ",", 
              " ", "\n", "\t\t\t", 
              RowBox[{"{", 
               RowBox[{"key", ",", " ", 
                RowBox[{"Keys", "[", "requestParser", "]"}]}], "}"}]}], "\n", 
             "\t\t", "]"}], ";"}], " ", "\n", "\t", "]"}], "]"}], "]"}], 
        "]"}], ",", " ", "\n", "\n", "\t", "$Failed"}], "\n", "]"}]}], ";"}], 
   " ", "\n", "\n", 
   RowBox[{
    RowBox[{"End", "[", "]"}], ";", " ", 
    RowBox[{"(*", "`Private`", "*)"}], "\n", "\n", 
    RowBox[{"EndPackage", "[", "]"}], ";", " ", 
    RowBox[{"(*", "`RequestParser`", "*)"}]}]}]}]], "Code",
 CellChangeTimes->{3.6942483573379984`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RequestToIndexPageQ", "[", "request_String", "]"}], " ", ":=", 
    " ", "\n", 
    RowBox[{"Or", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"request", ",", " ", 
        RowBox[{
        "\"\<GET / HTTP/1.\>\"", " ", "~~", " ", "_", " ", "~~", " ", 
         "\"\<\\r\\n\>\"", " ", "~~", " ", "___"}]}], "]"}], ",", " ", "\n", 
      "\t", 
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"request", ",", " ", 
        RowBox[{
        "\"\<GET /index HTTP/1.\>\"", " ", "~~", " ", "_", " ", "~~", " ", 
         "\"\<\\r\\n\>\"", " ", "~~", " ", "___"}]}], "]"}]}], "\n", "]"}]}], 
   ";"}], " "}]], "Code",
 CellChangeTimes->{{3.6942483856149063`*^9, 3.6942485115681224`*^9}, {
  3.694249000582712*^9, 3.694249003382661*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TakeAddress", "[", "request_String", "]"}], " ", ":=", " ", "\n", 
    RowBox[{"First", "[", "\n", "\t", 
     RowBox[{"StringCases", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"First", "[", 
        RowBox[{"StringSplit", "[", 
         RowBox[{"request", ",", " ", "\"\<\\r\\n\>\""}], "]"}], "]"}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "\"\<GET \>\"", " ", "~~", " ", "address___", " ", "~~", " ", 
         "\"\< HTTP/1.\>\"", " ", "~~", " ", "_"}], " ", ":>", " ", 
        "address"}]}], "\n", "\t", "]"}], "\n", "]"}]}], ";"}], " "}]], "Code",
 CellChangeTimes->{{3.6942485715751987`*^9, 3.6942487517784214`*^9}, {
  3.6942490470630903`*^9, 3.694249084505022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parser", "=", 
  RowBox[{"RequestParser", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<test\>\"", "\[Rule]", 
     RowBox[{"RequestToIndexPageQ", "\[Rule]", "TakeAddress"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6942483726836395`*^9, 3.694248381835591*^9}, {
  3.6942487597589083`*^9, 3.694248777545805*^9}}],

Cell[BoxData[
 RowBox[{"RequestParser", "[", 
  RowBox[{"{", 
   RowBox[{"\<\"test\"\>", "\[Rule]", 
    RowBox[{"RequestToIndexPageQ", "\[Rule]", "TakeAddress"}]}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.694248777930207*^9, 3.694248832150972*^9, 
  3.6942490068070908`*^9, 3.6942490577685633`*^9, 3.694249090731939*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RequestToIndexPageQ", "[", "\"\<GET / HTTP/1.1\\r\\n\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6942487811557837`*^9, 3.694248799330728*^9}, 
   3.6942489881145296`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6942490283485613`*^9, 3.694249058408468*^9, 
  3.694249091463862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TakeAddress", "[", "\"\<GET / HTTP/1.1\\r\\n\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6942490131669044`*^9, 3.694249025028571*^9}}],

Cell[BoxData["\<\"/\"\>"], "Output",
 CellChangeTimes->{
  3.694248800181164*^9, 3.6942488329713125`*^9, {3.6942489886301928`*^9, 
   3.69424902577059*^9}, 3.694249059052313*^9, 3.694249092107543*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"parser", "[", "\"\<GET / HTTP/1.1\\r\\n\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6942490306684933`*^9, 3.6942490332792664`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"test\"\>", "\[Rule]", "\<\"/\"\>"}]], "Output",
 CellChangeTimes->{{3.6942490341522903`*^9, 3.694249059615327*^9}, 
   3.6942490927591214`*^9}]
}, Open  ]]
},
WindowSize->{775, 872},
WindowMargins->{{Automatic, 92}, {8, Automatic}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 9343, 219, 2181, "Code"],
Cell[9904, 241, 831, 21, 123, "Code"],
Cell[10738, 264, 774, 18, 159, "Code"],
Cell[CellGroupData[{
Cell[11537, 286, 343, 8, 30, "Input"],
Cell[11883, 296, 330, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12250, 308, 198, 4, 30, "Input"],
Cell[12451, 314, 122, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12610, 321, 159, 2, 30, "Input"],
Cell[12772, 325, 200, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13009, 333, 156, 2, 30, "Input"],
Cell[13168, 337, 171, 3, 30, "Output"]
}, Open  ]]
}
]
*)

